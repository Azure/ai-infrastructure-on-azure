apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-labeler-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-labeler-role
rules:
- apiGroups: [""] # Core API group
  resources: ["nodes"]
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-labeler-rolebinding
subjects:
- kind: ServiceAccount
  name: node-labeler-sa
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: node-labeler-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: kube-system
  name: node-labeler
spec:
  selector:
    matchLabels:
      app: node-labeler
  template:
    metadata:
      labels:
        app: node-labeler
    spec:
      serviceAccountName: node-labeler-sa
      containers:
      - name: labeler
        image: mcr.microsoft.com/cbl-mariner/busybox:1.35
        command: ["sh", "-c", "echo 'Task completed' && sleep infinity"]
      initContainers:
      - name: hca-guid-discovery
        image: mcr.microsoft.com/aznhc/aznhc-nv:1.2.0
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_RESOURCE
        volumeMounts:
        - name: dev-infiniband
          mountPath: /dev/infiniband
        - name: workdir
          mountPath: /work
        command: ["/bin/bash", "-lc"]
        args:
        - |
          ulimit -l unlimited
          set -euo pipefail

          # Skip if no RDMA devices present
          if [ ! -d /dev/infiniband ]; then
            echo "No RDMA devices found; skipping HCA GUID discovery."
            exit 0
          fi

          # Collect all HCAs' GUIDs - fail gracefully if ibstatus fails
          if ! command -v ibstatus >/dev/null 2>&1; then
            echo "ibstatus not available; skipping HCA GUID discovery."
            exit 0
          fi

          if ! guids=$(ibstatus 2>/dev/null | awk '/Infiniband device/ {dev=$3} /link_layer:/ && $2=="InfiniBand" {gsub(/'\''/,"",dev); print dev}' \
              | xargs -I% ibstat "%" 2>/dev/null \
              | grep "Port GUID" | awk -F: '{print $2}' | sed 's/^ *0x00/0x/'); then
            echo "Failed to collect HCA GUIDs; skipping HCA GUID discovery."
            exit 0
          fi

          if [ -z "$guids" ]; then
            echo "No InfiniBand GUIDs found; skipping HCA GUID discovery."
            exit 0
          fi

          # Convert GUIDs to comma-separated list and save to file
          guids_csv=$(echo "$guids" | tr '\n' ',' | sed 's/,$//')
          echo "$guids_csv" > /work/hca_guids.txt
          echo "Collected HCA GUIDs: $guids_csv"
          
          echo "HCA GUID discovery completed successfully"
      - name: init-labeler
        image: mcr.microsoft.com/oss/kubernetes/kubectl:v1.26.3
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: host-data
          mountPath: /var/lib/hyperv/.kvp_pool_3
        - name: workdir
          mountPath: /work
        command: ["/bin/sh", "-c"] 
        args:
          - |
            for kv in $(cat /var/lib/hyperv/.kvp_pool_3 | sed 's/\x0/ /g;s/  */ /g' | sed -E 's/([^ ]+) ([^ ]+)/\1=\2\n/g; s/ ([^ ]+)$/=\1/'); do
              echo "$kv"
              kubectl label node "$NODE_NAME" "hyperv/$kv" --overwrite
            done

            pkey=$(cat /sys/class/infiniband/mlx5_*/ports/1/pkeys/* 2>/dev/null | grep 0x8 | sort -u)
            if [ -n "$pkey" ]; then
              kubectl label node "$NODE_NAME" "ib/pkey=$pkey" --overwrite
            fi

            if [ -s /work/hca_guids.txt ]; then
              hca_guids=$(cat /work/hca_guids.txt)
              kubectl annotate node "$NODE_NAME" "ib/hca-guids=$hca_guids" --overwrite
              echo "Annotated node with HCA GUIDs: $hca_guids"
            fi
      volumes:
      - name: host-data
        hostPath:
          path: /var/lib/hyperv/.kvp_pool_3
      - name: dev-infiniband
        hostPath:
          path: /dev/infiniband
      - name: workdir
        emptyDir: {}
