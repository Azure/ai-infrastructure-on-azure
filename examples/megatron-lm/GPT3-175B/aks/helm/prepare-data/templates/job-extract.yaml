apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "prepare-data.fullname" . }}-extract
  labels:
    {{- include "prepare-data.labels" . | nindent 4 }}
    app.kubernetes.io/component: extract
spec:
  parallelism: {{ .Values.pipeline.extract.parallelism }}
  completions: {{ .Values.pipeline.extract.parallelism }}
  completionMode: Indexed
  template:
    spec:
      restartPolicy: Never
      initContainers:
      - name: wait-for-download
        image: {{ .Values.pipeline.extract.image }}
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "Waiting for download to complete..."
          while [ $(find /shared-data/{{ .Values.pipeline.dataDirectory }}/{{ .Values.pipeline.download.outputDirectory }} -name ".download-*-complete" | wc -l) -lt {{ .Values.pipeline.download.parallelism }} ]; do
            echo "Found $(find /shared-data/{{ .Values.pipeline.dataDirectory }}/{{ .Values.pipeline.download.outputDirectory }} -name ".download-*-complete" | wc -l) of {{ .Values.pipeline.download.parallelism }} workers completed"
            sleep 10
          done
          echo "All download workers completed, starting extract..."
        volumeMounts:
        - name: shared-storage
          mountPath: /shared-data
      containers:
      - name: extract
        image: {{ .Values.pipeline.extract.image }}
        command: ["python", "/scripts/extract.py"]
        args:
        - "--input-directory=/shared-data/{{ .Values.pipeline.dataDirectory }}/{{ .Values.pipeline.download.outputDirectory }}"
        - "--output-directory=/shared-data/{{ .Values.pipeline.dataDirectory }}/{{ .Values.pipeline.extract.outputDirectory }}"
        - "--worker-index=$(JOB_COMPLETION_INDEX)"
        - "--total-workers={{ .Values.pipeline.extract.parallelism }}"
        env:
        - name: JOB_COMPLETION_INDEX
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['batch.kubernetes.io/job-completion-index']
        volumeMounts:
        - name: shared-storage
          mountPath: /shared-data
        - name: scripts
          mountPath: /scripts
        resources:
          {{- toYaml .Values.pipeline.extract.resources | nindent 10 }}
      volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: {{ .Values.pvc.name }}
      - name: scripts
        configMap:
          name: {{ include "prepare-data.fullname" . }}-scripts
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
